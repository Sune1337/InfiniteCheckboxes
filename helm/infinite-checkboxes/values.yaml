images:
  pubsub_redis:
    replicaCount: 1
    repository: redis
    tag: 8
    pullPolicy: IfNotPresent
  
  cluster_mongodb:
    replicaCount: 1
    repository: mongo
    tag: 8
    pullPolicy: IfNotPresent
    persistence:
      enabled: false
      claimName: ""

  silohost:
    replicaCount: 3
    repository: silohost
    tag: 1.0.25
    pullPolicy: IfNotPresent
    metricsServerPort:
#    goldDiggerRngSecret: "<Key for HMACSHA256 in hex>"
#    serilog:
#      Serilog__Using__0: "Serilog.Sinks.Grafana.Loki"
#      Serilog__WriteTo__0__Name: "GrafanaLoki"
#      Serilog__WriteTo__0__Args__uri: ""
#      Serilog__WriteTo__0__Args__labels__0__key: "service_name"
#      Serilog__WriteTo__0__Args__labels__0__value: "silohost"
#      Serilog__WriteTo__0__Args__propertiesAsLabels__0: "PodName";
#    grafanaLokiSecrets: grafana-loki-secrets
  webapp:
    replicaCount: 1
    repository: webapp
    tag: 1.0.53
    pullPolicy: IfNotPresent
    metricsServerPort:
    useSerilogRequestLogging: false
#    serilog:
#      Serilog__Using__0: "Serilog.Sinks.Grafana.Loki"
#      Serilog__WriteTo__0__Name: "GrafanaLoki"
#      Serilog__WriteTo__0__Args__uri: ""
#      Serilog__WriteTo__0__Args__labels__0__key: "service_name"
#      Serilog__WriteTo__0__Args__labels__0__value: "webapp"
#      Serilog__WriteTo__0__Args__propertiesAsLabels__0: "PodName";
#    grafanaLokiSecrets: grafana-loki-secrets

imageCredentials:
  registry: registry.example.com
  username: ""
  password: ""
  email: ""

imagePullSecrets:
  - name: infinite-checkboxes-registry-secret

#grafanaLokiSecrets:
#  Serilog__WriteTo__0__Args__credentials__login:
#  Serilog__WriteTo__0__Args__credentials__password:

persistentVolumeClaims: 
#  cluster-mongodb:
#    enabled: true
#    size: 10Gi
#    storageClass: standard
#    accessModes: 
#      - ReadWriteOnce
#    annotations:
#      "helm.sh/resource-policy": keep


# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
#    traefik.ingress.kubernetes.io/router.entrypoints: websecure
#    traefik.ingress.kubernetes.io/router.tls: "true"
#    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
#    - secretName: webapp-cert
#      hosts:
#        - example.com
